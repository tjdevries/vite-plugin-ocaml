// Generated by Melange

import * as Caml_js_exceptions from "melange.js/caml_js_exceptions.js";

function raiseWhenNotFound(x) {
  if (x == null) {
    throw new Caml_js_exceptions.MelangeError("Not_found", {
              MEL_EXN_ID: "Not_found"
            });
  }
  return x;
}

function fromInt(len, xs, $$enum) {
  let _i = 0;
  while(true) {
    const i = _i;
    if (i === len) {
      return ;
    }
    const k = xs[i];
    if (k === $$enum) {
      return i;
    }
    _i = i + 1 | 0;
    continue ;
  };
}

function fromIntAssert(len, xs, $$enum) {
  let _i = 0;
  while(true) {
    const i = _i;
    if (i === len) {
      throw new Caml_js_exceptions.MelangeError("Not_found", {
                MEL_EXN_ID: "Not_found"
              });
    }
    const k = xs[i];
    if (k === $$enum) {
      return i;
    }
    _i = i + 1 | 0;
    continue ;
  };
}

export {
  raiseWhenNotFound ,
  fromInt ,
  fromIntAssert ,
}
/* No side effect */
