// Generated by Melange

import * as Caml_exceptions from "melange.js/caml_exceptions.js";
import * as Caml_js_exceptions from "melange.js/caml_js_exceptions.js";

const Undefined = /* @__PURE__ */Caml_exceptions.create("CamlinternalLazy.Undefined");

function is_val(l) {
  return l.LAZY_DONE;
}

function forward_with_closure(blk, closure) {
  const result = closure();
  blk.VAL = result;
  blk.LAZY_DONE = true;
  return result;
}

function raise_undefined() {
  throw new Caml_js_exceptions.MelangeError(Undefined, {
            MEL_EXN_ID: Undefined
          });
}

function force_lazy_block(blk) {
  const closure = blk.VAL;
  blk.VAL = raise_undefined;
  try {
    return forward_with_closure(blk, closure);
  }
  catch (e){
    blk.VAL = (function () {
        throw new Caml_js_exceptions.MelangeError(e.MEL_EXN_ID, e);
      });
    throw new Caml_js_exceptions.MelangeError(e.MEL_EXN_ID, e);
  }
}

function force_val_lazy_block(blk) {
  const closure = blk.VAL;
  blk.VAL = raise_undefined;
  return forward_with_closure(blk, closure);
}

function force(lzv) {
  if (lzv.LAZY_DONE) {
    return lzv.VAL;
  } else {
    return force_lazy_block(lzv);
  }
}

function force_val(lzv) {
  if (lzv.LAZY_DONE) {
    return lzv.VAL;
  } else {
    return force_val_lazy_block(lzv);
  }
}

export {
  Undefined ,
  force_lazy_block ,
  force_val_lazy_block ,
  force ,
  force_val ,
  is_val ,
}
/* No side effect */
