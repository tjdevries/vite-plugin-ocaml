// Generated by Melange

import * as Caml_exceptions from "melange.js/caml_exceptions.js";
import * as Caml_external_polyfill from "melange.js/caml_external_polyfill.js";
import * as Caml_sys from "melange.js/caml_sys.js";

const executable_name = Caml_sys.caml_sys_executable_name(undefined);

const os_type = Caml_sys.os_type(undefined);

const backend_type = /* Other */{
  _0: "Melange"
};

const big_endian = false;

const unix = Caml_sys.os_type(undefined) === "Unix";

const win32 = Caml_sys.os_type(undefined) === "Win32";

function getenv_opt(s) {
  const x = typeof process === "undefined" ? undefined : process;
  if (x !== undefined) {
    return x.env[s];
  }
  
}

const interactive = {
  contents: false
};

function set_signal(sig_num, sig_beh) {
  
}

const Break = /* @__PURE__ */Caml_exceptions.create("Stdlib.Sys.Break");

function catch_break(on) {
  
}

function Make(Immediate, Non_immediate) {
  const repr = /* Non_immediate */1;
  return {
          repr: repr
        };
}

const Immediate64 = {
  Make: Make
};

const cygwin = false;

const word_size = 32;

const int_size = 32;

const max_string_length = 2147483647;

const max_array_length = 2147483647;

const max_floatarray_length = 2147483647;

const sigabrt = -1;

const sigalrm = -2;

const sigfpe = -3;

const sighup = -4;

const sigill = -5;

const sigint = -6;

const sigkill = -7;

const sigpipe = -8;

const sigquit = -9;

const sigsegv = -10;

const sigterm = -11;

const sigusr1 = -12;

const sigusr2 = -13;

const sigchld = -14;

const sigcont = -15;

const sigstop = -16;

const sigtstp = -17;

const sigttin = -18;

const sigttou = -19;

const sigvtalrm = -20;

const sigprof = -21;

const sigbus = -22;

const sigpoll = -23;

const sigsys = -24;

const sigtrap = -25;

const sigurg = -26;

const sigxcpu = -27;

const sigxfsz = -28;

const ocaml_version = "4.14.0+mel";

const development_version = false;

const ocaml_release = {
  major: 4,
  minor: 14,
  patchlevel: 0,
  extra: [
    /* Plus */0,
    "mel"
  ]
};

function enable_runtime_warnings(prim) {
  return Caml_external_polyfill.resolve("caml_ml_enable_runtime_warnings")(prim);
}

function runtime_warnings_enabled(prim) {
  return Caml_external_polyfill.resolve("caml_ml_runtime_warnings_enabled")(prim);
}

export {
  executable_name ,
  getenv_opt ,
  interactive ,
  os_type ,
  backend_type ,
  unix ,
  win32 ,
  cygwin ,
  word_size ,
  int_size ,
  big_endian ,
  max_string_length ,
  max_array_length ,
  max_floatarray_length ,
  set_signal ,
  sigabrt ,
  sigalrm ,
  sigfpe ,
  sighup ,
  sigill ,
  sigint ,
  sigkill ,
  sigpipe ,
  sigquit ,
  sigsegv ,
  sigterm ,
  sigusr1 ,
  sigusr2 ,
  sigchld ,
  sigcont ,
  sigstop ,
  sigtstp ,
  sigttin ,
  sigttou ,
  sigvtalrm ,
  sigprof ,
  sigbus ,
  sigpoll ,
  sigsys ,
  sigtrap ,
  sigurg ,
  sigxcpu ,
  sigxfsz ,
  Break ,
  catch_break ,
  ocaml_version ,
  development_version ,
  ocaml_release ,
  enable_runtime_warnings ,
  runtime_warnings_enabled ,
  Immediate64 ,
}
/* No side effect */
